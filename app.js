webpackJsonp([1],{0:function(e,t,o){"use strict";var n=o(295),r=o(298),a=o(296),i=o(39),s=o(297),l=o(22),c=o(1),p=o(217);console.log(p);var d=Object.keys(p);r.blogs.replace(d.reverse().map(function(e){return{content:p[e],key:e}}));var u=new n.Header,h=new a.Website;l.reaction(function(){return r.blogs.slice()},function(){h.content.replace([u].concat(r.blogs.map(function(e){var t=/\.\/\d{4}\/(\d{8})/g.exec(e.key),o="";return t&&(o=c(t[1]).format("LL")),new s.Blog(e.content,e.key,o)})))},!0);var f=document.getElementById("container");f&&i.render(h.getElement(),f)},36:function(e,t){e.exports=function(){var e=[];return e.toString=function(){for(var e=[],t=0;t<this.length;t++){var o=this[t];o[2]?e.push("@media "+o[2]+"{"+o[1]+"}"):e.push(o[1])}return e.join("")},e.i=function(t,o){"string"==typeof t&&(t=[[null,t,""]]);for(var n={},r=0;r<this.length;r++){var a=this[r][0];"number"==typeof a&&(n[a]=!0)}for(r=0;r<t.length;r++){var i=t[r];"number"==typeof i[0]&&n[i[0]]||(o&&!i[2]?i[2]=o:o&&(i[2]="("+i[2]+") and ("+o+")"),e.push(i))}},e}},63:function(e,t,o){function n(e,t){for(var o=0;o<e.length;o++){var n=e[o],r=h[n.id];if(r){r.refs++;for(var a=0;a<r.parts.length;a++)r.parts[a](n.parts[a]);for(;a<n.parts.length;a++)r.parts.push(c(n.parts[a],t))}else{for(var i=[],a=0;a<n.parts.length;a++)i.push(c(n.parts[a],t));h[n.id]={id:n.id,refs:1,parts:i}}}}function r(e){for(var t=[],o={},n=0;n<e.length;n++){var r=e[n],a=r[0],i=r[1],s=r[2],l=r[3],c={css:i,media:s,sourceMap:l};o[a]?o[a].parts.push(c):t.push(o[a]={id:a,parts:[c]})}return t}function a(e,t){var o=b(),n=y[y.length-1];if("top"===e.insertAt)n?n.nextSibling?o.insertBefore(t,n.nextSibling):o.appendChild(t):o.insertBefore(t,o.firstChild),y.push(t);else{if("bottom"!==e.insertAt)throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");o.appendChild(t)}}function i(e){e.parentNode.removeChild(e);var t=y.indexOf(e);t>=0&&y.splice(t,1)}function s(e){var t=document.createElement("style");return t.type="text/css",a(e,t),t}function l(e){var t=document.createElement("link");return t.rel="stylesheet",a(e,t),t}function c(e,t){var o,n,r;if(t.singleton){var a=w++;o=g||(g=s(t)),n=p.bind(null,o,a,!1),r=p.bind(null,o,a,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(o=l(t),n=u.bind(null,o),r=function(){i(o),o.href&&URL.revokeObjectURL(o.href)}):(o=s(t),n=d.bind(null,o),r=function(){i(o)});return n(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;n(e=t)}else r()}}function p(e,t,o,n){var r=o?"":n.css;if(e.styleSheet)e.styleSheet.cssText=v(t,r);else{var a=document.createTextNode(r),i=e.childNodes;i[t]&&e.removeChild(i[t]),i.length?e.insertBefore(a,i[t]):e.appendChild(a)}}function d(e,t){var o=t.css,n=t.media;if(n&&e.setAttribute("media",n),e.styleSheet)e.styleSheet.cssText=o;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(o))}}function u(e,t){var o=t.css,n=t.sourceMap;n&&(o+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(n))))+" */");var r=new Blob([o],{type:"text/css"}),a=e.href;e.href=URL.createObjectURL(r),a&&URL.revokeObjectURL(a)}var h={},f=function(e){var t;return function(){return"undefined"==typeof t&&(t=e.apply(this,arguments)),t}},m=f(function(){return/msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase())}),b=f(function(){return document.head||document.getElementsByTagName("head")[0]}),g=null,w=0,y=[];e.exports=function(e,t){t=t||{},"undefined"==typeof t.singleton&&(t.singleton=m()),"undefined"==typeof t.insertAt&&(t.insertAt="bottom");var o=r(e);return n(o,t),function(e){for(var a=[],i=0;i<o.length;i++){var s=o[i],l=h[s.id];l.refs--,a.push(l)}if(e){var c=r(e);n(c,t)}for(var i=0;i<a.length;i++){var l=a[i];if(0===l.refs){for(var p=0;p<l.parts.length;p++)l.parts[p]();delete h[l.id]}}}};var v=function(){var e=[];return function(t,o){return e[t]=o,e.filter(Boolean).join("\n")}}()},202:function(e,t,o){t=e.exports=o(36)(),t.push([e.id,"._3MqAN7tezej4SSAbTmSEU0{padding-bottom:10px}._2A9JiSIm3an8uWVyKeaP9N{font-family:Droid Serif,serif;color:#b7b8f7;font-size:80px}._2qUWYN3yxUrcdowGt6joVI{font-family:Droid Serif,serif;color:#4f51a5;font-size:14px}",""]),t.locals={header:"_3MqAN7tezej4SSAbTmSEU0",title:"_2A9JiSIm3an8uWVyKeaP9N",subtitle:"_2qUWYN3yxUrcdowGt6joVI"}},203:function(e,t,o){t=e.exports=o(36)(),t.push([e.id,"._2FE2Ol8dGrN-YlQ4B4fd40{background-color:#f7f7f7;padding:10px}",""]),t.locals={website:"_2FE2Ol8dGrN-YlQ4B4fd40"}},204:function(e,t,o){t=e.exports=o(36)(),t.push([e.id,"._1UYsC4Q4wuI--I2w_n8tTu{max-width:800px}._3D06YYwDNmc2ooYT5_dCWC{font-family:Droid Sans,sans-serif;color:#080808;font-size:10px;margin-bottom:5px}.hSZe1bqmwF-ZnAOw2pBA8{font-family:Droid Sans,sans-serif;color:#080808;font-size:14px}.hSZe1bqmwF-ZnAOw2pBA8 pre{background-color:#fff;border:1px solid #e8e7ae;padding:10px;margin:0;margin-bottom:15px}.hSZe1bqmwF-ZnAOw2pBA8 code{font-family:Droid Sans Mono,monospace;color:#080808;font-size:12px}.hSZe1bqmwF-ZnAOw2pBA8 h1{font-family:Droid Serif,serif;color:#a5a34f;font-size:30px;margin:0;margin-bottom:15px}.hSZe1bqmwF-ZnAOw2pBA8 h2,.hSZe1bqmwF-ZnAOw2pBA8 h3,.hSZe1bqmwF-ZnAOw2pBA8 h4,.hSZe1bqmwF-ZnAOw2pBA8 h5,.hSZe1bqmwF-ZnAOw2pBA8 h6{font-family:Droid Serif,serif;color:#e8e7ae;font-size:22px;margin:0;margin-bottom:15px}.hSZe1bqmwF-ZnAOw2pBA8 a,.hSZe1bqmwF-ZnAOw2pBA8 a *{color:#a5a34f}.hSZe1bqmwF-ZnAOw2pBA8 a:hover,.hSZe1bqmwF-ZnAOw2pBA8 a:hover *{color:#e8e7ae}.hSZe1bqmwF-ZnAOw2pBA8 ol,.hSZe1bqmwF-ZnAOw2pBA8 p,.hSZe1bqmwF-ZnAOw2pBA8 ul{margin:0;margin-bottom:15px}.hSZe1bqmwF-ZnAOw2pBA8 ol>li,.hSZe1bqmwF-ZnAOw2pBA8 ul>li{margin-bottom:10px}",""]),t.locals={blog:"_1UYsC4Q4wuI--I2w_n8tTu",date:"_3D06YYwDNmc2ooYT5_dCWC",content:"hSZe1bqmwF-ZnAOw2pBA8"}},217:function(e,t,o){e.exports={"./2016/20161027 A simple webiste for a developer/blog.md":o(218),"./2016/20161101 Adding a production config for webpack/blog.md":o(219),"./2016/20161102 A new font/blog.md":o(220),"./2016/20161106 Styles and new libraries/blog.md":o(221),"./2016/20161110 TypeScript 2.1 RC/blog.md":o(222),"./2016/20161111 MobX createTransformer/blog.md":o(223)}},218:function(e,t){e.exports="<h1 id=all-you-need-is-webpack>All you need is webpack</h1> <p>If you are a web developer and plan to do your own little blog, you don&#39;t really need a full-blown CMS. In fact, all you need is Visual Studio Code and a couple of JavaScript libraries. For this blog, i use the following libraries:</p> <ul> <li>React: This gives me the opportunity to add a little HTML to the site without actually writing HTML. Let&#39;s be honest: Why should i write in a language that gives me just nothing when I also could have TypeScript?</li> <li>Webpack: Webpack is really great. Just add the right loaders and your website is being built for you.</li> </ul> <p>Thats about everything for now. This website looks really simple but it has all you need for a simple blog. The next step will probable be to add a little more awesomeness in terms of a better looking UI to it. After that, i will probably add routing to provide Urls that are a little bit more meaningful than no Url at all.</p> "},219:function(e,t){e.exports="<h1 id=adding-a-production-configuration-to-webpack>Adding a production configuration to webpack</h1> <p>Today, i added a production configuration for webpack to my project that extends my normal configuration. My normal configuration looks like this:</p> <pre><code>var webpack = require(&#39;webpack&#39;);\nvar path = require(&#39;path&#39;);\n\nmodule.exports = {\n  entry: {\n    app: &#39;./source/website.tsx&#39;,\n  },\n  output: {\n    path: path.join(__dirname, &#39;dist&#39;),\n    filename: &#39;website.js&#39;,\n    publicPath: &#39;/&#39;\n  },\n  resolve: {\n    extensions: [&#39;&#39;, &#39;.webpack.js&#39;, &#39;.web.js&#39;, &#39;.ts&#39;, &#39;.tsx&#39;, &#39;.js&#39;, &#39;.png&#39;, &#39;.jpg&#39;, &#39;.json&#39;, &#39;.less&#39;, &#39;.md&#39;]\n  },\n  module: {\n    loaders: [\n      { test: /\\.tsx?$/, loader: &#39;ts&#39; },\n      { test: /\\.md$/, loader: &#39;html!markdown&#39; },\n      { test: /\\.jpg$/, loader: &#39;file&#39; }\n    ]\n  },\n  devtool: &#39;source-map&#39;,\n};\n</code></pre><p>As you can see, it is really simple. The entry point of the application is <code>./source/website.tsx</code> which then refers to all the other resources of the page. No optimization or what so ever is done.</p> <p>My newly added production configuration looks like this:</p> <pre><code>var webpack = require(&#39;webpack&#39;);\nvar CleanWebpackPlugin = require(&#39;clean-webpack-plugin&#39;);\nvar config = require(&#39;./webpack.config&#39;);\n\nmodule.exports = Object.assign(config, {\n  devtool: undefined,\n  plugins: [\n    new CleanWebpackPlugin([&#39;dist&#39;]),\n    new webpack.optimize.UglifyJsPlugin(),\n    new webpack.optimize.OccurrenceOrderPlugin(),\n    new webpack.DefinePlugin({\n      &#39;process.env&#39;: {\n        &#39;NODE_ENV&#39;: JSON.stringify(&#39;production&#39;)\n      }\n    })\n  ]\n});\n</code></pre><p>The concept is to import the normal configuration and then add more properties or override some of the existing. All the entry points and loaders and other general stuff stays the same. The big advantage of this is that i only have to change my configuration on one place and not have to keep multiple files in sync.</p> <p>Also, i added some plugins to minimize the file size dramatically (from somewhere around 800KB down to 148KB).</p> "},220:function(e,t){e.exports="<h1 id=a-new-font>A new font</h1> <p>Today, I added a font to the site. This is a quite easy step that can make much of a difference. Luckily, Google offer a good tools to browser for fonts: <a href=https://fonts.google.com/ >Google Fonts</a></p> <p>Here you can browser through hundreds of fonts, compare them to each other and finally generate a link to embed id in the website.</p> <p>I have chosen the Droid family which seems quite pretty to me. Further, it provides a variety of different styles, with and without serifs.</p> "},221:function(e,t){e.exports="<h1 id=styles-and-new-libraries>Styles and new libraries</h1> <p>Today, i added styles which i write with <a href=http://lesscss.org/ >LESS</a>, a CSS preprocessor i also use at work. I like it pretty much and it has all the features needed to style a website properly. Also, the webpack integration is really good; there is an extra <a href=https://github.com/webpack/less-loader>loader</a> for it that does all the work.</p> <p>I added this to the <code>loaders</code> section of my webpack configuration:</p> <pre><code class=lang-javascript>{ test: /\\.less$/, loader: &#39;style!css!less&#39; }\n</code></pre> <p>This means, all LESS files are first converted to CSS and then passed to the other webpack loaders to do their magic. There are not much styles yet but at least, everything is ready to add them.</p> <h2 id=and-libraries>And libraries</h2> <p>If you know me, you might also know that i like the <a href=http://mobxjs.github.io/mobx/ >MobX</a> library. It provides a reactive approach to programming with React and is very close to <a href=http://knockoutjs.com/ >Knockout</a>. Further, i added <a href=https://github.com/mobxjs/mobx-react>mobx-react</a> that connects MobX with React. Now i&#39;m ready to add some more advanced features to the site.</p> "},222:function(e,t){e.exports="<h1 id=typescript-2-1-rc>TypeScript 2.1 RC</h1> <p>Today, the release candidate of TypeScript 2.1 was <a href=https://blogs.msdn.microsoft.com/typescript/2016/11/08/typescript-2-1-rc-better-inference-async-functions-and-more/ >announced</a> by Daniel Rosenwasser. Of course, i had to check it out and play with it. There are some new features i waited for like async / await for ES5 or better type inference.</p> <h2 id=better-usage-of-implicit-any>Better usage of implicit any</h2> <p>When you don&#39;t disable the use implicit any types, TypeScript will now infer the type based on whats later assigned to the value. This also works for arrays.</p> <pre><code class=lang-typescript>let test = [];\n// test has type any[]\n\ntest.push(1);\n// test has type number[]\n\ntest.push(&#39;a&#39;);\n// test has type (number|string)[]\n</code></pre> <p>If you assign a new value to the variable, it will have the new type. This should reduce the number of &#39;implicit any&#39; errors and reduce the need to provide a type to new variables if you do not assign a value immediately.</p> <h2 id=async-await-in-es5>Async / await in ES5</h2> <p>This is something i waited for a long time and finally it&#39;s here! I hope that it gets now easier to write asynchronous code and also reduce the complexity.</p> <p>We do have this for a while now in C# and it&#39;s quite handy to use. Also i can think of a couple of examples in some projects i work on where it would make my life a lot easier. Of course i will have to wait for the final version of TypeScript 2.1.</p> "},223:function(e,t){e.exports="<h1 id=mobx-createtransformer>MobX createTransformer</h1> <p>The <a href=http://mobxjs.github.io/mobx/refguide/create-transformer.html><code>createTransformer</code></a> functionality in the MobX framework was something i struggled a bit to understand until now. This blog post should finally help me to get a grasp of it.</p> <p>This functionality can be used to store the result of a transformation of an observable an then server this stored value until the observable has changed.</p> <p>It also can be used to transform one tree of observable objects into another tree of observable objects. This reminds me a little bit of <a href=http://redux.js.org/ >Redux</a>, another very popular state handling library for React.</p> <p>I created a very simple example to show the basic functionality of it:</p> <pre><code class=lang-typescript>const observableValue = observable(3);\n\nconst transformer = createTransformer&lt;IObservableValue&lt;number&gt;, number&gt;((value) =&gt; {\n  console.log(&#39;Transformer evaluated.&#39;);\n  return observableValue.get() * 2;\n});\n\nautorun(() =&gt; {\n  console.log(transformer(observableValue));\n  console.log(transformer(observableValue));\n});\n\nobservableValue.set(4);\n</code></pre> <p>When i run it, the console output is:</p> <pre><code>Transformer evaluated.\n6\n6\nTransformer evaluated.\n8\n8\n</code></pre><p><code>transformer</code> will only be re-evaluated when the underlying observable changes. of course, this example is very trivial but the mechanism is very powerful to create more complex things without losing more performance as needed.</p> "},292:function(e,t,o){var n=o(202);"string"==typeof n&&(n=[[e.id,n,""]]);o(63)(n,{});n.locals&&(e.exports=n.locals)},293:function(e,t,o){var n=o(203);"string"==typeof n&&(n=[[e.id,n,""]]);o(63)(n,{});n.locals&&(e.exports=n.locals)},294:function(e,t,o){var n=o(204);"string"==typeof n&&(n=[[e.id,n,""]]);o(63)(n,{});n.locals&&(e.exports=n.locals)},295:function(e,t,o){"use strict";var n=this&&this.__assign||Object.assign||function(e){for(var t,o=1,n=arguments.length;o<n;o++){t=arguments[o];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},r=o(28),a=o(30),i=o(292),s=a.observer(function(e){return r.createElement("div",{className:i.header},r.createElement("div",{className:i.title},"uweg.github.io"),r.createElement("div",{className:i.subtitle},"welcome to my website!"))}),l=function(){function e(){var e=this;this.getElement=function(){return r.createElement(s,n({},e))}}return e}();t.Header=l},296:function(e,t,o){"use strict";var n=this&&this.__assign||Object.assign||function(e){for(var t,o=1,n=arguments.length;o<n;o++){t=arguments[o];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},r=o(28),a=o(22),i=o(30),s=o(293),l=i.observer(function(e){return r.createElement("div",{className:s.website},r.createElement("div",{className:""},e.content.map(function(e){return r.createElement("div",null,e.getElement(),r.createElement("hr",null))})))}),c=function(){function e(){var e=this;this.content=a.observable([]),this.getElement=function(){return r.createElement(l,n({},e))}}return e}();t.Website=c},297:function(e,t,o){"use strict";var n=this&&this.__assign||Object.assign||function(e){for(var t,o=1,n=arguments.length;o<n;o++){t=arguments[o];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},r=o(30),a=o(28),i=o(294),s=r.observer(function(e){return a.createElement("div",{className:i.blog},a.createElement("div",{className:i.date},e.date),a.createElement("div",{className:i.content,dangerouslySetInnerHTML:{__html:e.content}}))}),l=function(){function e(e,t,o){var r=this;this.content=e,this.key=t,this.date=o,this.getElement=function(){return a.createElement(s,n({},r))}}return e}();t.Blog=l},298:function(e,t,o){"use strict";var n=o(22);t.blogs=n.observable([])}});